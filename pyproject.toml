[project]
name = "px_demo"
version = "2.0.0"
description = "pyprojectx demo project"
authors = [
    { name = "Houbie", email = "ivo@houbrechts-it.be" },
]
requires-python = ">=3.9"
readme = { file = "README.ipynb", content-type = "application/x-ipynb+json" }
license = { text = "MIT" }

dependencies = [
    "pycowsay>=0.0.0.2",
]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.pyprojectx.venv]
requirements = ["-r pyproject.toml", "pytest"]
dir = ".venv"

[tool.pyprojectx.main]
requirements = ["ruff", "pre-commit", "px-utils", "httpie", "build"]
post-install = "pre-commit install"

[tool.pyprojectx.jupyter]
requirements = ["jupyterlab", "jupytext", "-e ."]

[tool.pyprojectx.aliases]
install = "pw@ --install-context venv"
test = { cmd = "pytest", ctx = "venv" }
format = ["ruff format", "ruff check --select I --fix"]
lint = ["ruff check"]
check = ["@lint", "@test"]
build = ["@install", "@check", "python -m build"]
clean = "pxrm dist .venv .ipynb_checkpoints"
post-json = "https POST pie.dev/post message='Pyprojectx is awesome!'"
notebook = "jupyter lab -y"
generate-readme = { cmd = "jupytext --to=md --opt hide_notebook_metadata=true README.ipynb", ctx = "jupyter" }

[tool.pyprojectx.os.win.aliases]
clean = "rmdir /s/q __pypackages__ .pytest_cache dist"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
line-length = 120
[tool.ruff.lint]
select = ["ALL"]
fixable = ["ALL"]
ignore = ["ISC001", "ANN", "FA", "FBT", "D100", "D102", "D103", "D104", "D105", "D213", "D203", "T201", "TRY003", "EM102", "COM812", "S602", "S603", "S604", "S605", "S607", "S324"]
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "I001", "INP001"]
